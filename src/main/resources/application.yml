spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    lifecycle:
      timeout-per-shutdown-phase: 30000
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      idle-timeout: 300000
      max-lifetime: 1800000
      connection-timeout: 20000
      
      # Leak detection and validation
      leak-detection-threshold: 15000
      validation-timeout: 5000
      
      # Connection testing
      connection-test-query: SELECT 1
      
      # Pool name for monitoring
      pool-name: AttendanceHikariCP
      
      # Additional connection properties for PostgreSQL/Supabase
      data-source-properties:
        socketTimeout: 30
        loginTimeout: 10
        tcpKeepAlive: true
        ApplicationName: cs102-attendance-app

  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        connection.handling_mode: delayed_acquisition_and_release_after_transaction
        query.timeout: 30000

  server:
    shutdown: graceful
  
  # Enhanced logging for connection monitoring
  logging:
    level:
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE
      com.zaxxer.hikari: DEBUG
      com.zaxxer.hikari.HikariConfig: DEBUG
      com.zaxxer.hikari.HikariDataSource: DEBUG
      com.zaxxer.hikari.pool: DEBUG

# Expose metrics for connection pool monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,hikaricp
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
  jmx:
    exposure:
      include: "*"

# Externalised CV thresholds
recognition:
  confidence: 0.70
  cooldownMs: 10000
face-service:
  url: http://localhost:5001   # to insert backend face service url